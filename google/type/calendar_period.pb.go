// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/type/calendar_period.proto

package _type

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// A `CalendarPeriod` represents the abstract concept of a time period that has
// a canonical start. Grammatically, "the start of the current
// `CalendarPeriod`." All calendar times begin at midnight UTC.
type CalendarPeriod int32

const (
	// Undefined period, raises an error.
	CalendarPeriod_CALENDAR_PERIOD_UNSPECIFIED CalendarPeriod = 0
	// A day.
	CalendarPeriod_DAY CalendarPeriod = 1
	// A week. Weeks begin on Monday, following
	// [ISO 8601](https://en.wikipedia.org/wiki/ISO_week_date).
	CalendarPeriod_WEEK CalendarPeriod = 2
	// A fortnight. The first calendar fortnight of the year begins at the start
	// of week 1 according to
	// [ISO 8601](https://en.wikipedia.org/wiki/ISO_week_date).
	CalendarPeriod_FORTNIGHT CalendarPeriod = 3
	// A month.
	CalendarPeriod_MONTH CalendarPeriod = 4
	// A quarter. Quarters start on dates 1-Jan, 1-Apr, 1-Jul, and 1-Oct of each
	// year.
	CalendarPeriod_QUARTER CalendarPeriod = 5
	// A half-year. Half-years start on dates 1-Jan and 1-Jul.
	CalendarPeriod_HALF CalendarPeriod = 6
	// A year.
	CalendarPeriod_YEAR CalendarPeriod = 7
)

var CalendarPeriod_name = map[int32]string{
	0: "CALENDAR_PERIOD_UNSPECIFIED",
	1: "DAY",
	2: "WEEK",
	3: "FORTNIGHT",
	4: "MONTH",
	5: "QUARTER",
	6: "HALF",
	7: "YEAR",
}

var CalendarPeriod_value = map[string]int32{
	"CALENDAR_PERIOD_UNSPECIFIED": 0,
	"DAY":                         1,
	"WEEK":                        2,
	"FORTNIGHT":                   3,
	"MONTH":                       4,
	"QUARTER":                     5,
	"HALF":                        6,
	"YEAR":                        7,
}

func (CalendarPeriod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52aec33199a3da0e, []int{0}
}

func init() {
	proto.RegisterEnum("google.type.CalendarPeriod", CalendarPeriod_name, CalendarPeriod_value)
}

func init() { proto.RegisterFile("google/type/calendar_period.proto", fileDescriptor_52aec33199a3da0e) }

var fileDescriptor_52aec33199a3da0e = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x2f, 0xa9, 0x2c, 0x48, 0xd5, 0x4f, 0x4e, 0xcc, 0x49, 0xcd, 0x4b, 0x49, 0x2c,
	0x8a, 0x2f, 0x48, 0x2d, 0xca, 0xcc, 0x4f, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x86,
	0x28, 0xd1, 0x03, 0x29, 0xd1, 0xaa, 0xe7, 0xe2, 0x73, 0x86, 0xaa, 0x0a, 0x00, 0x2b, 0x12, 0x92,
	0xe7, 0x92, 0x76, 0x76, 0xf4, 0x71, 0xf5, 0x73, 0x71, 0x0c, 0x8a, 0x0f, 0x70, 0x0d, 0xf2, 0xf4,
	0x77, 0x89, 0x0f, 0xf5, 0x0b, 0x0e, 0x70, 0x75, 0xf6, 0x74, 0xf3, 0x74, 0x75, 0x11, 0x60, 0x10,
	0x62, 0xe7, 0x62, 0x76, 0x71, 0x8c, 0x14, 0x60, 0x14, 0xe2, 0xe0, 0x62, 0x09, 0x77, 0x75, 0xf5,
	0x16, 0x60, 0x12, 0xe2, 0xe5, 0xe2, 0x74, 0xf3, 0x0f, 0x0a, 0xf1, 0xf3, 0x74, 0xf7, 0x08, 0x11,
	0x60, 0x16, 0xe2, 0xe4, 0x62, 0xf5, 0xf5, 0xf7, 0x0b, 0xf1, 0x10, 0x60, 0x11, 0xe2, 0xe6, 0x62,
	0x0f, 0x0c, 0x75, 0x0c, 0x0a, 0x71, 0x0d, 0x12, 0x60, 0x05, 0x69, 0xf0, 0x70, 0xf4, 0x71, 0x13,
	0x60, 0x03, 0xb1, 0x22, 0x5d, 0x1d, 0x83, 0x04, 0xd8, 0x9d, 0xba, 0x19, 0x6f, 0x3c, 0x94, 0x63,
	0xf8, 0xf0, 0x50, 0x8e, 0xf1, 0xc7, 0x43, 0x39, 0xc6, 0x86, 0x47, 0x72, 0x8c, 0x2b, 0x1e, 0xc9,
	0x31, 0x9e, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x2f, 0x1e,
	0xc9, 0x31, 0x7c, 0x00, 0x89, 0x3f, 0x96, 0x63, 0x3c, 0xf1, 0x58, 0x8e, 0x91, 0x8b, 0x3f, 0x39,
	0x3f, 0x57, 0x0f, 0xc9, 0x13, 0x4e, 0xc2, 0xa8, 0x5e, 0x08, 0x00, 0x79, 0x33, 0x80, 0x31, 0x4a,
	0x3b, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x3f, 0x3d, 0x3f, 0x3d, 0x5f,
	0x1f, 0xa2, 0x27, 0xb1, 0x20, 0xb3, 0x58, 0x1f, 0x29, 0x98, 0xac, 0x41, 0xc4, 0x22, 0x26, 0x66,
	0xf7, 0x90, 0x80, 0x24, 0x36, 0x70, 0x10, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x85, 0xad,
	0xc8, 0x4a, 0x47, 0x01, 0x00, 0x00,
}

func (x CalendarPeriod) String() string {
	s, ok := CalendarPeriod_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
